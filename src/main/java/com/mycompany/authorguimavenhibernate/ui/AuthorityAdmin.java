/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.authorguimavenhibernate.ui;

import com.mycompany.authorguimavenhibernate.pojos.Person;
import com.mycompany.authorguimavenhibernate.util.Factory;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.util.Collection;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pavel
 */
public class AuthorityAdmin extends javax.swing.JFrame {

    private Person person;
    List<Person> persons;
    Integer id_person;

    /**
     * Creates new form AuthorityAdmin
     */
    public AuthorityAdmin() {
        initComponents();
        person = new Person();
        mymouselistener();
        showAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        jLabel1.setText("логин:");
        jLabel1.setName("jLabel1"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N

        jLabel3.setText("пароль:");
        jLabel3.setName("jLabel3"); // NOI18N

        jTextField2.setName("jTextField2"); // NOI18N

        jButton1.setText("Добавить");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onclicAdd(evt);
            }
        });

        jButton2.setLabel("Обновить");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onclicUpdate(evt);
            }
        });

        jButton5.setText("Удалить");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onclicDelete(evt);
            }
        });

        jButton6.setText("Найти по логину");
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onclicFindByLogin(evt);
            }
        });

        jButton7.setText("Выход");
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onclicExit(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "login", "password", " puttime"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(jTextField2))
                        .addGap(22, 22, 22)
                        .addComponent(jButton6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(28, 28, 28)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5)
                                .addGap(26, 26, 26)
                                .addComponent(jButton7))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onclicAdd(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onclicAdd
        if (!jTextField1.getText().trim().equals("") && !jTextField2.getText().trim().equals("")) {
            person.setLogin(jTextField1.getText().trim());
            person.setPassword(jTextField2.getText().trim());
            person.setIdPerson(id_person);
            person.setPuttime(null);
            try {
                Factory.getInstance().getPersonDAO().addPerson(person);
                showAll();
            } catch (SQLException ex) {
                Logger.getLogger(AuthorityAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "не введен логин или пароль", "ошибка ввода", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_onclicAdd

    private void onclicUpdate(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onclicUpdate
        if (!jTextField1.getText().trim().equals("") && !jTextField2.getText().trim().equals("")) {
            person.setLogin(jTextField1.getText().trim());
            person.setPassword(jTextField2.getText().trim());
            person.setIdPerson(id_person);
            try {
                if (id_person == null) {
                    person.setPuttime(null);
                    Factory.getInstance().getPersonDAO().addPerson(person);
                }
                Factory.getInstance().getPersonDAO().updatePerson(person);
                showAll();
            } catch (SQLException ex) {
                Logger.getLogger(AuthorityAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "не введен логин или пароль", "ошибка ввода", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_onclicUpdate

    private void onclicDelete(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onclicDelete
        if (!jTextField1.getText().trim().equals("") && !jTextField2.getText().trim().equals("")) {
            person.setLogin(jTextField1.getText().trim());
            person.setPassword(jTextField2.getText().trim());
            person.setIdPerson(id_person);
            try {
                Factory.getInstance().getPersonDAO().deletePerson(person);
                showAll();
            } catch (SQLException ex) {
                Logger.getLogger(AuthorityAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "не введен логин или пароль", "ошибка ввода", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_onclicDelete

    private void onclicFindByLogin(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onclicFindByLogin
//        jTable1.repaint();
        if (!jTextField1.getText().trim().equals("")) {
            try {
                persons = Factory.getInstance().getPersonDAO().findbyLogin(jTextField1.getText());
                displayResult(persons);
            } catch (SQLException ex) {
                Logger.getLogger(AuthorityAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_onclicFindByLogin

    private void onclicExit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onclicExit
        // TODO add your handling code here:
    }//GEN-LAST:event_onclicExit

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthorityAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AuthorityAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private void showAll() {
        try {
            persons = Factory.getInstance().getPersonDAO().findAll();
        } catch (SQLException ex) {
            Logger.getLogger(AuthorityAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayResult(persons);
    }

    private void displayResult(Collection resultList) {

        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();
        tableHeaders.add("id");
        tableHeaders.add("login");
        tableHeaders.add("password");
        tableHeaders.add("puttime");

        for (Object o : (Collection) resultList) {
            person = (Person) o;
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(person.getIdPerson());
            oneRow.add(person.getLogin());
            oneRow.add(person.getPassword());
            oneRow.add(person.getPuttime());
            tableData.add(oneRow);
        }
        jTable1.setModel(new DefaultTableModel(tableData, tableHeaders));
    }

    private void mymouselistener() {
        jTable1.addMouseListener(new MouseListener() {

            @Override
            public void mouseClicked(MouseEvent event) {

            }

            @Override
            public void mouseEntered(MouseEvent event) {

            }

            @Override
            public void mouseExited(MouseEvent event) {

            }

            @Override
            public void mousePressed(MouseEvent event) {
                if (event.getButton() == MouseEvent.BUTTON1) {
                    Point point = event.getPoint();
                    int column = jTable1.columnAtPoint(point);
                    int row = jTable1.rowAtPoint(point);
                    jTable1.setColumnSelectionInterval(column, column);
                    jTable1.setRowSelectionInterval(row, row);
                    jTextField1.setText(jTable1.getValueAt(row, 1).toString());
                    jTextField2.setText(jTable1.getValueAt(row, 2).toString());
                    id_person = (Integer) jTable1.getValueAt(row, 0);
                }
            }

            @Override
            public void mouseReleased(MouseEvent me) {

            }
        });
    }
}
